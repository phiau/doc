
2017-12-11(Monday)

    最近在考虑一个问题，就是如果一个服务器的同时在线人数达到了峰值怎么办？

    一开始，自己想，可以通过再搭一个服务器，然后把请求转发过去。不过自己这方面没什么经验，所以也就请教了 Greyhawk，问他们是怎么处理的。

    他说，大部分游戏就是通过分区来处理这种问题。然后何时考虑分区，是根据运营数据推算的（他也是估计的）。根据服务器能够支持多少并发，来推算多少注册用户。注册到了多少了，或者在线到了多少，就要考虑加新区了。

    在关于 Jazmin 的《中间服务器设计与实现》中，看到一句话：

    RPC服务器，大型网络应用都需要支持成千上万人同时在线，这就要求服务器有很强的伸缩性和扩展性。通过分布式部署，可以将负载分布在节点上，这样只需要部署更多的服务器就可以支持更多的用户。服务器之间需要使用远程过程调用（RPC）进行通讯。

    上面说的“拓展性”，需要有一个前提，就是“rpc服务器是无状态的”，如果是“无状态”，那么状态需要保存在哪里，这是一个需要解决的问题。所以考虑 redis 集群，或者靠谱的分布式缓存，但有些游戏，缓存也达不到要求（有些游戏，缓存也不能满足它对实时的要求），所以还是跟游戏的类型有关。

    rpc 服务器，不一定是游戏服务器，游戏服务器有着更高的性能要求。如果游戏不需要很高的相应，那就可以把状态全放在缓存。