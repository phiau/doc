

2018-03-07(Wednesday)

Java NIO vs. IO
原文链接： http://tutorials.jenkov.com/java-nio/nio-vs-io.html


Java NIO 和 IO 之间主要的不同
    下面的表概括了 Java NIO 和 IO 主要的不同点。我会在下面各小结更详细深入介绍每一个不同点。
    IO            NIO
    面向流        面向缓冲区
    阻塞IO        非阻塞IO
                  选择器  

面向流 VS. 面向缓冲区
    Java NIO 和 IO 最大的不同是 IO 是面向流，而 NIO 是面向缓冲区。所以这意味着什么？

    Java IO 是面向流的意味着你从流一次读取一个或多个字节。如何读取字节取决于你自己。他们不会在任何地方有缓存。此外，你不能在流中来回移动数据。如果你想来回移动数据，你得自己从流读取数据，然后把数据缓存起来。

    Java NIO 的缓冲区处理方式稍微不同。数据是先读取到缓冲区，然后稍后再处理它。你如果需要可以在缓冲区来回移动。这就使得你在处理时可以更加灵活。但是，你还需要检查缓冲区是否包含所有你需要处理的数据。还有你需要确保你从缓冲区读数据时，你不会覆盖尚未处理的缓冲区的数据。


阻塞 VS。 非阻塞 IO
    Java IO 的各种流都是阻塞的。这意味着，当一个线程调用 read() 或者 write() 时，线程会被阻塞直到一些数据准备好了可以读到，或者数据全部写好。线程在这段时间将不能做其他事；

    Java NIO 非阻塞模式使得一个线程请求从一个 channel 读取数据，在数据可以读取之前，线程可以去做其他事而不是阻塞。

    对于非阻塞写也是一样。一个线程请求写入数据到 channel，不用等到数据全部写完。在这同时，线程可以去做其他的事。

    线程空闲时没有阻塞在 IO 调用，那么这个时候它可以在其他通道上执行 IO。也就是说，一个线程现在可以管理多个输入、输出 channel。


